<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
  <key id="relation" for="edge" attr.name="relation" attr.type="string" />
  <key id="abstract" for="node" attr.name="abstract" attr.type="string" />
  <key id="title" for="node" attr.name="title" attr.type="string" />
  <graph edgedefault="undirected">
    <node id="P5222">
      <data key="title">random residue sequences and the number theoretic hilbert transform</data>
      <data key="abstract">This paper presents random residue sequences derived from the number theoretic Hilbert (NHT) transform and their correlation properties. The autocorrelation of a NHT derived sequence is zero for all non-zero shifts which illustrates that these are self-orthogonal sequences. The cross correlation function between two sequences may be computed with respect to the moduli of the either sequence. There appears to be some kind of an inverse qualitative relationship between these two different computations for many sets of residue sequences.</data>
    </node>
    <node id="P18159">
      <data key="title">the cubic public key transformation</data>
      <data key="abstract">We propose the use of the cubic transformation for public-key applications and digital signatures. Transformations modulo a prime p or a composite n=pq, where p and q are primes, are used in such a fashion that each transformed value has only 3 roots that makes it a more efficient transformation than the squaring transformation of Rabin, which has 4 roots. Such a transformation, together with additional tag information, makes it possible to uniquely invert each transformed value. The method may be used for other exponents as well.</data>
    </node>
    <node id="P99329">
      <data key="title">binary gh sequences for multiparty communication</data>
      <data key="abstract">This paper investigates cross correlation properties of sequences derived from GH sequences modulo p, where p is a prime number and presents comparison with cross correlation properties of pseudo noise sequences. For GH sequences modulo prime, a binary random sequence B(n) is constructed, based on whether the period is p-1 (or a divisor) or 2p+2 (or a divisor). We show that B(n) sequences have much less peak cross correlation compared to PN sequence fragments obtained from the same generator. Potential applications of these sequences to cryptography are sketched.</data>
    </node>
    <node id="P141547">
      <data key="title">new class of pseudorandom d sequences to generate cryptographic keys</data>
      <data key="abstract">This article proposes the use of pseudorandom decimal sequences that have gone through an additional random mapping for the design of cryptographic keys. These sequences are generated by starting with inverse prime expansions in base 3 and then replacing 2 in the expansion with either the string 01 or 10 based on the preceding bit, which represents a general mapping. We show that the resulting pseudorandom sequences have excellent autocorrelation properties. Such a method can be extended to inverse prime expansions to any base.</data>
    </node>
    <node id="P31738">
      <data key="title">the piggy bank cryptographic trope</data>
      <data key="abstract">This paper presents applications of the trope of the locked and sealed piggy-bank into which the secret can be easily inserted but from which it cannot be withdrawn without opening the box. We present a basic two-pass cryptographic scheme that can serve as template for a variety of implementations. Together with the sealed piggy-bank is sent a coded letter that lists and certifies the contents of the box. We show how this idea can help increase the security of cryptographic protocols for classical systems as well as those based on "single-state" systems. More specifically, we propose the use of a hashing digest (instead of the coded letter) to detect loss of key bits to the eavesdropper and use in communication systems where error correction is an important issue.</data>
    </node>
    <node id="P4131">
      <data key="title">a review of man in the middle attacks</data>
      <data key="abstract">This paper presents a survey of man-in-the-middle (MIM) attacks in communication networks and methods of protection against them. In real time communication, the attack can in many situations be discovered by the use of timing information. The most common attacks occur due to Address Resolution Protocol (ARP) cache poisoning, DNS spoofing, session hijacking, and SSL hijacking.</data>
    </node>
    <node id="P81049">
      <data key="title">survey of key distribution schemes for wireless sensor networks</data>
      <data key="abstract">This paper presents a survey of key distribution schemes for wireless sensor networks. This survey includes the new approach of key distribution using the piggy bank method. Different Network architectures and different key pre-distribution schemes are described. The survey includes the use of the piggy bank approach to cryptography in which part of the key is pre-distributed and the remainder is varied in the application.</data>
    </node>
    <node id="P87571">
      <data key="title">connectivity in social networks</data>
      <data key="abstract">The value of a social network is generally determined by its size and the connectivity of its nodes. But since some of the nodes may be fake ones and others that are dormant, the question of validating the node counts by statistical tests becomes important. In this paper we propose the use of the Benford's distribution to check on the trustworthiness of the connectivity statistics. Our experiments using statistics of both symmetric and asymmetric networks show that when the accumulation processes are random, the convergence to Benford's law is significantly better, and therefore this fact can be used to distinguish between processes which are randomly generated and those with internal dependencies.</data>
    </node>
    <node id="P5241">
      <data key="title">a key set cipher for wireless sensor networks</data>
      <data key="abstract">This paper proposes the use of sets of keys, together with corresponding identifiers, for use in wireless sensor networks and similar resource-constrained applications. A specific cryptographic scheme described in the paper is based on the use of a family of self-inverting matrices derived from the number theoretic Hilbert transform in conjunction with the Blom's scheme. In a randomized version of this scheme, the users change their published IDs at will but the parties can still reach agreement on the key by using individual scaling factors. The random protocol increases the security of the system.</data>
    </node>
    <node id="P57198">
      <data key="title">oblivious transfer based on key exchange</data>
      <data key="abstract">Key-exchange protocols have been overlooked as a possible means for implementing oblivious transfer (OT). In this article, we present protocols for mutual exchange of secrets, 1-out-of-2 OT and coin-flipping similar to the Diffie-Hellman protocol using the idea of obliviously exchanging encryption keys. Since the Diffie-Hellman scheme is widely used, our protocol may provide a useful alternative to the conventional methods for implementation of oblivious transfer and a useful primitive in building larger cryptographic schemes.</data>
    </node>
    <node id="P35436">
      <data key="title">watermarking using decimal sequences</data>
      <data key="abstract">This paper introduces the use of decimal sequences in a code division multiple access (CDMA) based watermarking system to hide information for authentication in black and white images. Matlab version 6.5 was used to implement the algorithms discussed in this paper. The advantage of using d-sequences over PN sequences is that one can choose from a variety of prime numbers which provides a more flexible system.</data>
    </node>
    <node id="P29175">
      <data key="title">generating target probability sequences and events</data>
      <data key="abstract">Cryptography and simulation of systems require that events of pre-defined probability be generated. This paper presents methods to generate target probability events based on the oblivious transfer protocol and target probabilistic sequences using probability distribution functions.</data>
    </node>
    <node id="P7729">
      <data key="title">understanding the properties of the bittorrent overlay</data>
      <data key="abstract">In this paper, we conduct extensive simulations to understand the properties of the overlay generated by BitTorrent. We start by analyzing how the overlay properties impact the efficiency of BitTorrent. We focus on the average peer set size (i.e., average number of neighbors), the time for a peer to reach its maximum peer set size, and the diameter of the overlay. In particular, we show that the later a peer arrives in a torrent, the longer it takes to reach its maximum peer set size. Then, we evaluate the impact of the maximum peer set size, the maximum number of outgoing connections per peer, and the number of NATed peers on the overlay properties. We show that BitTorrent generates a robust overlay, but that this overlay is not a random graph. In particular, the connectivity of a peer to its neighbors depends on its arriving order in the torrent. We also show that a large number of NATed peers significantly compromise the robustness of the overlay to attacks. Finally, we evaluate the impact of peer exchange on the overlay properties, and we show that it generates a chain-like overlay with a large diameter, which will adversely impact the efficiency of large torrents.</data>
    </node>
    <node id="P319">
      <data key="title">secret sharing with trusted third parties using piggy bank protocol</data>
      <data key="abstract">This paper presents a new scheme to distribute secret shares using two trusted third parties to increase security and eliminate the dependency on single trusted third party. This protocol for communication between a device and two trusted third parties uses the piggy bank cryptographic paradigm. We also present a protocol to give law enforcing agencies access to sensitive information present on a cell phone or a device using secret sharing scheme. The ideas for classical systems may also be applied to quantum schemes.</data>
    </node>
    <node id="P10354">
      <data key="title">analysis of digital knapsack based sealed bid auction</data>
      <data key="abstract">The need of totally secure online auction has led to the invention of many auction protocols. But as new attacks are developed, auction protocols also require corresponding strengthening. We analyze the auction protocol based on the well-known mathematical public-key knapsack problem for the design of asymmetric public-key knapsack trapdoor cryptosystem. Even though the knapsack system is not cryptographically secure, it can be used in certain auction situations. We describe the limitations of the protocol like detecting and solving the tie between bidders, malicious behavior of participants and also selection of price set by the seller and offer solutions.</data>
    </node>
    <node id="P110000">
      <data key="title">ascending auctions and walrasian equilibrium</data>
      <data key="abstract">We present a family of submodular valuation classes that generalizes gross substitute. We show that Walrasian equilibrium always exist for one class in this family, and there is a natural ascending auction which finds it. We prove some new structural properties on gross-substitute auctions which, in turn, show that the known ascending auctions for this class (Gul-Stacchetti and Ausbel) are, in fact, identical. We generalize these two auctions, and provide a simple proof that they terminate in a Walrasian equilibrium.</data>
    </node>
    <node id="P88717">
      <data key="title">survey of sybil attacks in social networks</data>
      <data key="abstract">This paper reviews the Sybil attack in social networks, which has the potential to compromise the whole distributed network. In the Sybil attack, the malicious user claims multiple identities to compromise the network. Sybil attacks can be used to change the overall ranking in voting applications, bad-mouth an opinion, access resources or to break the trust mechanism behind a P2P network. In this paper, different defense mechanisms used to mitigate Sybil attacks are also reviewed.</data>
    </node>
    <node id="P73187">
      <data key="title">a survey of p2p network security</data>
      <data key="abstract">This paper presents a review of peer-to-peer network security. Popular for sharing of multimedia files, these networks carry risks and vulnerabilities relating to data integrity, spyware, adware, and unwanted files. Further attacks include those of forgery, pollution, repudiation, membership and Eclipse attacks, neighbor selection attacks, Sybil, DoS, and omission attacks. We review some protection mechanisms that have been devised.</data>
    </node>
    <node id="P51964">
      <data key="title">multiparty probability computation and verification</data>
      <data key="abstract">A multiparty computation protocol is described in which the parties can generate different probability events that is based on the sharing of a single anonymized random number, and also perform oblivious transfer. A method to verify the correctness of the procedure, without revealing the random numbers used by the parties, is proposed.</data>
    </node>
    <node id="P50028">
      <data key="title">selling privacy at auction</data>
      <data key="abstract">We initiate the study of markets for private data, though the lens of differential privacy. Although the purchase and sale of private data has already begun on a large scale, a theory of privacy as a commodity is missing. In this paper, we propose to build such a theory. Specifically, we consider a setting in which a data analyst wishes to buy information from a population from which he can estimate some statistic. The analyst wishes to obtain an accurate estimate cheaply. On the other hand, the owners of the private data experience some cost for their loss of privacy, and must be compensated for this loss. Agents are selfish, and wish to maximize their profit, so our goal is to design truthful mechanisms. Our main result is that such auctions can naturally be viewed and optimally solved as variants of multi-unit procurement auctions. Based on this result, we derive auctions for two natural settings which are optimal up to small constant factors: #R##N#1. In the setting in which the data analyst has a fixed accuracy goal, we show that an application of the classic Vickrey auction achieves the analyst's accuracy goal while minimizing his total payment. #R##N#2. In the setting in which the data analyst has a fixed budget, we give a mechanism which maximizes the accuracy of the resulting estimate while guaranteeing that the resulting sum payments do not exceed the analysts budget. #R##N#In both cases, our comparison class is the set of envy-free mechanisms, which correspond to the natural class of fixed-price mechanisms in our setting. #R##N#In both of these results, we ignore the privacy cost due to possible correlations between an individuals private data and his valuation for privacy itself. We then show that generically, no individually rational mechanism can compensate individuals for the privacy loss incurred due to their reported valuations for privacy.</data>
    </node>
    <edge source="P5222" target="P35436">
      <data key="relation">reference</data>
    </edge>
    <edge source="P5222" target="P5241">
      <data key="relation">reference</data>
    </edge>
    <edge source="P5222" target="P81049">
      <data key="relation">reference</data>
    </edge>
    <edge source="P18159" target="P29175">
      <data key="relation">reference</data>
    </edge>
    <edge source="P99329" target="P4131">
      <data key="relation">reference</data>
    </edge>
    <edge source="P99329" target="P73187">
      <data key="relation">reference</data>
    </edge>
    <edge source="P141547" target="P73187">
      <data key="relation">reference</data>
    </edge>
    <edge source="P31738" target="P10354">
      <data key="relation">reference</data>
    </edge>
    <edge source="P31738" target="P29175">
      <data key="relation">reference</data>
    </edge>
    <edge source="P31738" target="P51964">
      <data key="relation">reference</data>
    </edge>
    <edge source="P31738" target="P4131">
      <data key="relation">reference</data>
    </edge>
    <edge source="P31738" target="P73187">
      <data key="relation">reference</data>
    </edge>
    <edge source="P31738" target="P81049">
      <data key="relation">reference</data>
    </edge>
    <edge source="P31738" target="P319">
      <data key="relation">reference</data>
    </edge>
    <edge source="P4131" target="P88717">
      <data key="relation">reference</data>
    </edge>
    <edge source="P4131" target="P51964">
      <data key="relation">reference</data>
    </edge>
    <edge source="P4131" target="P87571">
      <data key="relation">reference</data>
    </edge>
    <edge source="P4131" target="P73187">
      <data key="relation">reference</data>
    </edge>
    <edge source="P81049" target="P5241">
      <data key="relation">reference</data>
    </edge>
    <edge source="P81049" target="P35436">
      <data key="relation">reference</data>
    </edge>
    <edge source="P87571" target="P88717">
      <data key="relation">reference</data>
    </edge>
    <edge source="P87571" target="P73187">
      <data key="relation">reference</data>
    </edge>
    <edge source="P57198" target="P29175">
      <data key="relation">reference</data>
    </edge>
    <edge source="P7729" target="P73187">
      <data key="relation">reference</data>
    </edge>
    <edge source="P10354" target="P110000">
      <data key="relation">reference</data>
    </edge>
    <edge source="P10354" target="P50028">
      <data key="relation">reference</data>
    </edge>
    <edge source="P88717" target="P73187">
      <data key="relation">reference</data>
    </edge>
    <edge source="P88717" target="P51964">
      <data key="relation">reference</data>
    </edge>
    <edge source="P73187" target="P51964">
      <data key="relation">reference</data>
    </edge>
  </graph>
</graphml>
