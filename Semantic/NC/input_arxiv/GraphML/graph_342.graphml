<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
  <key id="relation" for="edge" attr.name="relation" attr.type="string" />
  <key id="abstract" for="node" attr.name="abstract" attr.type="string" />
  <key id="title" for="node" attr.name="title" attr.type="string" />
  <graph edgedefault="undirected">
    <node id="P428">
      <data key="title">passgan a deep learning approach for password guessing</data>
      <data key="abstract">State-of-the-art password guessing tools, such as HashCat and John the Ripper, enable users to check billions of passwords per second against password hashes. In addition to performing straightforward dictionary attacks, these tools can expand password dictionaries using password generation rules, such as concatenation of words (e.g., "password123456") and leet speak (e.g., "password" becomes "p4s5w0rd"). Although these rules work well in practice, expanding them to model further passwords is a laborious task that requires specialized expertise. To address this issue, in this paper we introduce PassGAN, a novel approach that replaces human-generated password rules with theory-grounded machine learning algorithms. Instead of relying on manual password analysis, PassGAN uses a Generative Adversarial Network (GAN) to autonomously learn the distribution of real passwords from actual password leaks, and to generate high-quality password guesses. Our experiments show that this approach is very promising. When we evaluated PassGAN on two large password datasets, we were able to surpass rule-based and state-of-the-art machine learning password guessing tools. However, in contrast with the other tools, PassGAN achieved this result without any a-priori knowledge on passwords or common password structures. Additionally, when we combined the output of PassGAN with the output of HashCat, we were able to match 51%-73% more passwords than with HashCat alone. This is remarkable, because it shows that PassGAN can autonomously extract a considerable number of password properties that current state-of-the art rules do not encode.</data>
    </node>
    <node id="P87652">
      <data key="title">stealing machine learning models via prediction apis</data>
      <data key="abstract">Machine learning (ML) models may be deemed confidential due to their sensitive training data, commercial value, or use in security applications. Increasingly often, confidential ML models are being deployed with publicly accessible query interfaces. ML-as-a-service ("predictive analytics") systems are an example: Some allow users to train models on potentially sensitive data and charge others for access on a pay-per-query basis. #R##N#The tension between model confidentiality and public access motivates our investigation of model extraction attacks. In such attacks, an adversary with black-box access, but no prior knowledge of an ML model's parameters or training data, aims to duplicate the functionality of (i.e., "steal") the model. Unlike in classical learning theory settings, ML-as-a-service offerings may accept partial feature vectors as inputs and include confidence values with predictions. Given these practices, we show simple, efficient attacks that extract target ML models with near-perfect fidelity for popular model classes including logistic regression, neural networks, and decision trees. We demonstrate these attacks against the online services of BigML and Amazon Machine Learning. We further show that the natural countermeasure of omitting confidence values from model outputs still admits potentially harmful model extraction attacks. Our results highlight the need for careful ML model deployment and new model extraction countermeasures.</data>
    </node>
    <node id="P123310">
      <data key="title">stackgan text to photo realistic image synthesis with stacked generative adversarial networks</data>
      <data key="abstract">Synthesizing high-quality images from text descriptions is a challenging problem in computer vision and has many practical applications. Samples generated by existing text-to-image approaches can roughly reflect the meaning of the given descriptions, but they fail to contain necessary details and vivid object parts. In this paper, we propose Stacked Generative Adversarial Networks (StackGAN) to generate 256x256 photo-realistic images conditioned on text descriptions. We decompose the hard problem into more manageable sub-problems through a sketch-refinement process. The Stage-I GAN sketches the primitive shape and colors of the object based on the given text description, yielding Stage-I low-resolution images. The Stage-II GAN takes Stage-I results and text descriptions as inputs, and generates high-resolution images with photo-realistic details. It is able to rectify defects in Stage-I results and add compelling details with the refinement process. To improve the diversity of the synthesized images and stabilize the training of the conditional-GAN, we introduce a novel Conditioning Augmentation technique that encourages smoothness in the latent conditioning manifold. Extensive experiments and comparisons with state-of-the-arts on benchmark datasets demonstrate that the proposed method achieves significant improvements on generating photo-realistic images conditioned on text descriptions.</data>
    </node>
    <node id="P59944">
      <data key="title">distillation as a defense to adversarial perturbations against deep neural networks</data>
      <data key="abstract">Deep learning algorithms have been shown to perform extremely well on many classical machine learning problems. However, recent studies have shown that deep learning, like other machine learning techniques, is vulnerable to adversarial samples: inputs crafted to force a deep neural network (DNN) to provide adversary-selected outputs. Such attacks can seriously undermine the security of the system supported by the DNN, sometimes with devastating consequences. For example, autonomous vehicles can be crashed, illicit or illegal content can bypass content filters, or biometric authentication systems can be manipulated to allow improper access. In this work, we introduce a defensive mechanism called defensive distillation to reduce the effectiveness of adversarial samples on DNNs. We analytically investigate the generalizability and robustness properties granted by the use of defensive distillation when training DNNs. We also empirically study the effectiveness of our defense mechanisms on two DNNs placed in adversarial settings. The study shows that defensive distillation can reduce effectiveness of sample creation from 95% to less than 0.5% on a studied DNN. Such dramatic gains can be explained by the fact that distillation leads gradients used in adversarial sample creation to be reduced by a factor of 10^30. We also find that distillation increases the average minimum number of features that need to be modified to create adversarial samples by about 800% on one of the DNNs we tested.</data>
    </node>
    <node id="P104522">
      <data key="title">giraffe using deep reinforcement learning to play chess</data>
      <data key="abstract">This report presents Giraffe, a chess engine that uses self-play to discover all its domain-specific knowledge, with minimal hand-crafted knowledge given by the programmer. Unlike previous attempts using machine learning only to perform parameter-tuning on hand-crafted evaluation functions, Giraffe's learning system also performs automatic feature extraction and pattern recognition. The trained evaluation function performs comparably to the evaluation functions of state-of-the-art chess engines - all of which containing thousands of lines of carefully hand-crafted pattern recognizers, tuned over many years by both computer chess experts and human chess masters. Giraffe is the most successful attempt thus far at using end-to-end machine learning to play chess.</data>
    </node>
    <node id="P139207">
      <data key="title">defensive distillation is not robust to adversarial examples</data>
      <data key="abstract">We show that defensive distillation is not secure: it is no more resistant to targeted misclassification attacks than unprotected neural networks.</data>
    </node>
    <node id="P84771">
      <data key="title">text understanding from scratch</data>
      <data key="abstract">This article demontrates that we can apply deep learning to text understanding from character-level inputs all the way up to abstract text concepts, using temporal convolutional networks (ConvNets). We apply ConvNets to various large-scale datasets, including ontology classification, sentiment analysis, and text categorization. We show that temporal ConvNets can achieve astonishing performance without the knowledge of words, phrases, sentences and any other syntactic or semantic structures with regards to a human language. Evidence shows that our models can work for both English and Chinese.</data>
    </node>
    <node id="P73239">
      <data key="title">improved techniques for training gans</data>
      <data key="abstract">We present a variety of new architectural features and training procedures that we apply to the generative adversarial networks (GANs) framework. We focus on two applications of GANs: semi-supervised learning, and the generation of images that humans find visually realistic. Unlike most work on generative models, our primary goal is not to train a model that assigns high likelihood to test data, nor do we require the model to be able to learn well without using any labels. Using our new techniques, we achieve state-of-the-art results in semi-supervised classification on MNIST, CIFAR-10 and SVHN. The generated images are of high quality as confirmed by a visual Turing test: our model generates MNIST samples that humans cannot distinguish from real data, and CIFAR-10 samples that yield a human error rate of 21.3%. We also present ImageNet samples with unprecedented resolution and show that our methods enable the model to learn recognizable features of ImageNet classes.</data>
    </node>
    <node id="P36054">
      <data key="title">transferability in machine learning from phenomena to black box attacks using adversarial samples</data>
      <data key="abstract">Many machine learning models are vulnerable to adversarial examples: inputs that are specially crafted to cause a machine learning model to produce an incorrect output. Adversarial examples that affect one model often affect another model, even if the two models have different architectures or were trained on different training sets, so long as both models were trained to perform the same task. An attacker may therefore train their own substitute model, craft adversarial examples against the substitute, and transfer them to a victim model, with very little information about the victim. Recent work has further developed a technique that uses the victim model as an oracle to label a synthetic training set for the substitute, so the attacker need not even collect a training set to mount the attack. We extend these recent techniques using reservoir sampling to greatly enhance the efficiency of the training procedure for the substitute model. We introduce new transferability attacks between previously unexplored (substitute, victim) pairs of machine learning model classes, most notably SVMs and decision trees. We demonstrate our attacks on two commercial machine learning classification systems from Amazon (96.19% misclassification rate) and Google (88.94%) using only 800 queries of the victim model, thereby showing that existing machine learning approaches are in general vulnerable to systematic black-box attacks regardless of their structure.</data>
    </node>
    <node id="P90249">
      <data key="title">touchalytics on the applicability of touchscreen input as a behavioral biometric for continuous authentication</data>
      <data key="abstract">We investigate whether a classifier can continuously authenticate users based on the way they interact with the touchscreen of a smart phone. We propose a set of 30 behavioral touch features that can be extracted from raw touchscreen logs and demonstrate that different users populate distinct subspaces of this feature space. In a systematic experiment designed to test how this behavioral pattern exhibits consistency over time, we collected touch data from users interacting with a smart phone using basic navigation maneuvers, i.e., up-down and left-right scrolling. We propose a classification framework that learns the touch behavior of a user during an enrollment phase and is able to accept or reject the current user by monitoring interaction with the touch screen. The classifier achieves a median equal error rate of 0% for intrasession authentication, 2%-3% for intersession authentication, and below 4% when the authentication test was carried out one week after the enrollment phase. While our experimental findings disqualify this method as a standalone authentication mechanism for long-term authentication, it could be implemented as a means to extend screen-lock time or as a part of a multimodal biometric authentication system.</data>
    </node>
    <node id="P35983">
      <data key="title">unsupervised representation learning with deep convolutional generative adversarial networks</data>
      <data key="abstract">In recent years, supervised learning with convolutional networks (CNNs) has seen huge adoption in computer vision applications. Comparatively, unsupervised learning with CNNs has received less attention. In this work we hope to help bridge the gap between the success of CNNs for supervised learning and unsupervised learning. We introduce a class of CNNs called deep convolutional generative adversarial networks (DCGANs), that have certain architectural constraints, and demonstrate that they are a strong candidate for unsupervised learning. Training on various image datasets, we show convincing evidence that our deep convolutional adversarial pair learns a hierarchy of representations from object parts to scenes in both the generator and discriminator. Additionally, we use the learned features for novel tasks - demonstrating their applicability as general image representations.</data>
    </node>
    <node id="P143001">
      <data key="title">playing atari with deep reinforcement learning</data>
      <data key="abstract">We present the first deep learning model to successfully learn control policies directly from high-dimensional sensory input using reinforcement learning. The model is a convolutional neural network, trained with a variant of Q-learning, whose input is raw pixels and whose output is a value function estimating future rewards. We apply our method to seven Atari 2600 games from the Arcade Learning Environment, with no adjustment of the architecture or learning algorithm. We find that it outperforms all previous approaches on six of the games and surpasses a human expert on three of them.</data>
    </node>
    <node id="P152461">
      <data key="title">infogan interpretable representation learning by information maximizing generative adversarial nets</data>
      <data key="abstract">This paper describes InfoGAN, an information-theoretic extension to the Generative Adversarial Network that is able to learn disentangled representations in a completely unsupervised manner. InfoGAN is a generative adversarial network that also maximizes the mutual information between a small subset of the latent variables and the observation. We derive a lower bound to the mutual information objective that can be optimized efficiently, and show that our training procedure can be interpreted as a variation of the Wake-Sleep algorithm. Specifically, InfoGAN successfully disentangles writing styles from digit shapes on the MNIST dataset, pose from lighting of 3D rendered images, and background digits from the central digit on the SVHN dataset. It also discovers visual concepts that include hair styles, presence/absence of eyeglasses, and emotions on the CelebA face dataset. Experiments show that InfoGAN learns interpretable representations that are competitive with representations learned by existing fully supervised methods.</data>
    </node>
    <node id="P135057">
      <data key="title">generating sequences with recurrent neural networks</data>
      <data key="abstract">This paper shows how Long Short-term Memory recurrent neural networks can be used to generate complex sequences with long-range structure, simply by predicting one data point at a time. The approach is demonstrated for text (where the data are discrete) and online handwriting (where the data are real-valued). It is then extended to handwriting synthesis by allowing the network to condition its predictions on a text sequence. The resulting system is able to generate highly realistic cursive handwriting in a wide variety of styles.</data>
    </node>
    <node id="P107556">
      <data key="title">improved training of wasserstein gans</data>
      <data key="abstract">Generative Adversarial Networks (GANs) are powerful generative models, but suffer from training instability. The recently proposed Wasserstein GAN (WGAN) makes progress toward stable training of GANs, but sometimes can still generate only low-quality samples or fail to converge. We find that these problems are often due to the use of weight clipping in WGAN to enforce a Lipschitz constraint on the critic, which can lead to undesired behavior. We propose an alternative to clipping weights: penalize the norm of gradient of the critic with respect to its input. Our proposed method performs better than standard WGAN and enables stable training of a wide variety of GAN architectures with almost no hyperparameter tuning, including 101-layer ResNets and language models over discrete data. We also achieve high quality generations on CIFAR-10 and LSUN bedrooms.</data>
    </node>
    <node id="P24033">
      <data key="title">conditional generative adversarial nets</data>
      <data key="abstract">Generative Adversarial Nets [8] were recently introduced as a novel way to train generative models. In this work we introduce the conditional version of generative adversarial nets, which can be constructed by simply feeding the data, y, we wish to condition on to both the generator and discriminator. We show that this model can generate MNIST digits conditioned on class labels. We also illustrate how this model could be used to learn a multi-modal model, and provide preliminary examples of an application to image tagging in which we demonstrate how this approach can generate descriptive tags which are not part of training labels.</data>
    </node>
    <node id="P10732">
      <data key="title">began boundary equilibrium generative adversarial networks</data>
      <data key="abstract">We propose a new equilibrium enforcing method paired with a loss derived from the Wasserstein distance for training auto-encoder based Generative Adversarial Networks. This method balances the generator and discriminator during training. Additionally, it provides a new approximate convergence measure, fast and stable training and high visual quality. We also derive a way of controlling the trade-off between image diversity and visual quality. We focus on the image generation task, setting a new milestone in visual quality, even at higher resolutions. This is achieved while using a relatively simple model architecture and a standard training procedure.</data>
    </node>
    <node id="P1353">
      <data key="title">adam a method for stochastic optimization</data>
      <data key="abstract">We introduce Adam, an algorithm for first-order gradient-based optimization of stochastic objective functions, based on adaptive estimates of lower-order moments. The method is straightforward to implement, is computationally efficient, has little memory requirements, is invariant to diagonal rescaling of the gradients, and is well suited for problems that are large in terms of data and/or parameters. The method is also appropriate for non-stationary objectives and problems with very noisy and/or sparse gradients. The hyper-parameters have intuitive interpretations and typically require little tuning. Some connections to related algorithms, on which Adam was inspired, are discussed. We also analyze the theoretical convergence properties of the algorithm and provide a regret bound on the convergence rate that is comparable to the best known results under the online convex optimization framework. Empirical results demonstrate that Adam works well in practice and compares favorably to other stochastic optimization methods. Finally, we discuss AdaMax, a variant of Adam based on the infinity norm.</data>
    </node>
    <node id="P2989">
      <data key="title">mcgan mean and covariance feature matching gan</data>
      <data key="abstract">We introduce new families of Integral Probability Metrics (IPM) for training Generative Adversarial Networks (GAN). Our IPMs are based on matching statistics of distributions embedded in a finite dimensional feature space. Mean and covariance feature matching IPMs allow for stable training of GANs, which we will call McGan. McGan minimizes a meaningful loss between distributions.</data>
    </node>
    <node id="P12093">
      <data key="title">adversarial examples are not easily detected bypassing ten detection methods</data>
      <data key="abstract">Neural networks are known to be vulnerable to adversarial examples: inputs that are close to natural inputs but classified incorrectly. In order to better understand the space of adversarial examples, we survey ten recent proposals that are designed for detection and compare their efficacy. We show that all can be defeated by constructing new loss functions. We conclude that adversarial examples are significantly harder to detect than previously appreciated, and the properties believed to be intrinsic to adversarial examples are in fact not. Finally, we propose several simple guidelines for evaluating future proposed defenses.</data>
    </node>
    <edge source="P428" target="P1353">
      <data key="relation">reference</data>
    </edge>
    <edge source="P428" target="P104522">
      <data key="relation">reference</data>
    </edge>
    <edge source="P428" target="P143001">
      <data key="relation">reference</data>
    </edge>
    <edge source="P428" target="P84771">
      <data key="relation">reference</data>
    </edge>
    <edge source="P428" target="P135057">
      <data key="relation">reference</data>
    </edge>
    <edge source="P428" target="P24033">
      <data key="relation">reference</data>
    </edge>
    <edge source="P428" target="P90249">
      <data key="relation">reference</data>
    </edge>
    <edge source="P428" target="P35983">
      <data key="relation">reference</data>
    </edge>
    <edge source="P428" target="P59944">
      <data key="relation">reference</data>
    </edge>
    <edge source="P428" target="P36054">
      <data key="relation">reference</data>
    </edge>
    <edge source="P428" target="P73239">
      <data key="relation">reference</data>
    </edge>
    <edge source="P428" target="P152461">
      <data key="relation">reference</data>
    </edge>
    <edge source="P428" target="P87652">
      <data key="relation">reference</data>
    </edge>
    <edge source="P428" target="P139207">
      <data key="relation">reference</data>
    </edge>
    <edge source="P428" target="P123310">
      <data key="relation">reference</data>
    </edge>
    <edge source="P428" target="P2989">
      <data key="relation">reference</data>
    </edge>
    <edge source="P428" target="P107556">
      <data key="relation">reference</data>
    </edge>
    <edge source="P428" target="P10732">
      <data key="relation">reference</data>
    </edge>
    <edge source="P428" target="P12093">
      <data key="relation">reference</data>
    </edge>
    <edge source="P123310" target="P24033">
      <data key="relation">reference</data>
    </edge>
    <edge source="P123310" target="P152461">
      <data key="relation">reference</data>
    </edge>
    <edge source="P59944" target="P36054">
      <data key="relation">reference</data>
    </edge>
    <edge source="P59944" target="P139207">
      <data key="relation">reference</data>
    </edge>
    <edge source="P59944" target="P12093">
      <data key="relation">reference</data>
    </edge>
    <edge source="P104522" target="P143001">
      <data key="relation">reference</data>
    </edge>
    <edge source="P73239" target="P35983">
      <data key="relation">reference</data>
    </edge>
    <edge source="P73239" target="P2989">
      <data key="relation">reference</data>
    </edge>
    <edge source="P73239" target="P107556">
      <data key="relation">reference</data>
    </edge>
    <edge source="P73239" target="P10732">
      <data key="relation">reference</data>
    </edge>
    <edge source="P36054" target="P12093">
      <data key="relation">reference</data>
    </edge>
    <edge source="P35983" target="P1353">
      <data key="relation">reference</data>
    </edge>
    <edge source="P35983" target="P152461">
      <data key="relation">reference</data>
    </edge>
    <edge source="P35983" target="P2989">
      <data key="relation">reference</data>
    </edge>
    <edge source="P35983" target="P107556">
      <data key="relation">reference</data>
    </edge>
    <edge source="P35983" target="P10732">
      <data key="relation">reference</data>
    </edge>
    <edge source="P152461" target="P1353">
      <data key="relation">reference</data>
    </edge>
    <edge source="P152461" target="P2989">
      <data key="relation">reference</data>
    </edge>
    <edge source="P135057" target="P1353">
      <data key="relation">reference</data>
    </edge>
    <edge source="P24033" target="P2989">
      <data key="relation">reference</data>
    </edge>
    <edge source="P10732" target="P1353">
      <data key="relation">reference</data>
    </edge>
  </graph>
</graphml>
