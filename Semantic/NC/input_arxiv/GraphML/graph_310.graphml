<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
  <key id="relation" for="edge" attr.name="relation" attr.type="string" />
  <key id="abstract" for="node" attr.name="abstract" attr.type="string" />
  <key id="title" for="node" attr.name="title" attr.type="string" />
  <graph edgedefault="undirected">
    <node id="P55920">
      <data key="title">the role of emotions in contributors activity a case study on the gentoo community</data>
      <data key="abstract">We analyze the relation between the emotions and the activity of contributors in the Open Source Software project GENTOO. Our case study builds on extensive data sets from the project's bug tracking platform BUGZILLA, to quantify the activity of contributors, and its mail archives, to quantify the emotions of contributors by means of sentiment analysis. The GENTOO project is known for a period of centralization within its bug triaging community. This was followed by considerable changes in community organization and performance after the sudden retirement of the central contributor. We analyze how this event correlates with the negative emotions, both in bilateral email discussions with the central contributor, and at the level of the whole community of contributors. We then extend our study to consider the activity patterns of GENTOO contributors in general. We find that contributors are more likely to become inactive when they express strong positive or negative emotions in the bug tracker, or when they deviate from the expected value of emotions in the mailing list. We use these insights to develop a Bayesian classifier that detects the risk of contributors leaving the project. Our analysis opens new perspectives for measuring online contributor motivation by means of sentiment analysis and for real-time predictions of contributor turnover in Open Source Software projects.</data>
    </node>
    <node id="P83951">
      <data key="title">investigating crowd creativity in online music communities</data>
      <data key="abstract">Crowd creativity is typically associated with peer-production communities focusing on artistic products like animations, video games, and music, but less frequently to Open Source Software (OSS), despite the fact that also developers must be creative to come up with new solutions to their technical challenges. In this paper, we conduct a study to further the understanding of which factors from prior work in both OSS and art communities are predictive of successful collaboration - defined as reuse of previous songs - in three different songwriting communities, namely Songtree, Splice, and ccMixter. The main findings from this study confirm that the success of collaborations is associated with high community status of recognizable authors and low degree of derivativity of songs.</data>
    </node>
    <node id="P6159">
      <data key="title">do feelings matter on the correlation of affects and the self assessed productivity in software engineering</data>
      <data key="abstract">Background: software engineering research (SE) lacks theory and methodologies for addressing human aspects in software development. Development tasks are undertaken through cognitive processing activities. Affects (emotions, moods, feelings) have a linkage to cognitive processing activities and the productivity of individuals. SE research needs to incorporate affect measurements to valorize human factors and to enhance management styles. #R##N#Objective: analyze the affects dimensions of valence, arousal, and dominance of software developers and their real-time correlation with their self-assessed productivity (sPR). #R##N#Method: repeated measurements design with 8 participants (4 students, 4 professionals), conveniently sampled and studied individually over 90 minutes of programming. The analysis was performed by fitting a linear mixed- effects (LME) model. #R##N#Results: valence and dominance are positively correlated with the sPR. The model was able to express about 38% of deviance from the sPR. Many lessons were learned when employing psychological measurements in SE and for fitting LME. #R##N#Conclusion: this article demonstrates the value of applying psychological tests in SE and echoes a call to valorize the human, individualized aspects of software developers. It reports a body of knowledge about affects, their classification, their measurement, and the best practices to perform psychological measurements in SE with LME models.</data>
    </node>
    <node id="P38538">
      <data key="title">the cost of collaboration for code and art evidence from a remixing community</data>
      <data key="abstract">In this paper, we use evidence from a remixing community to evaluate two pieces of common wisdom about collaboration. First, we test the theory that jointly produced works tend to be of higher quality than individually authored products. Second, we test the theory that collaboration improves the quality of functional works like code, but that it works less well for artistic works like images and sounds. We use data from Scratch, a large online community where hundreds of thousands of young users share and remix millions of animations and interactive games. Using peer-ratings as a measure of quality, we estimate a series of fitted regression models and find that collaborative Scratch projects tend to receive ratings that are lower than individually authored works. We also find that code-intensive collaborations are rated higher than media-intensive efforts. We conclude by discussing the limitations and implications of these findings.</data>
    </node>
    <node id="P124227">
      <data key="title">benefitting from the grey literature in software engineering research</data>
      <data key="abstract">Researchers generally place the most trust in peer-reviewed, published information, such as journals and conference papers. By contrast, software engineering (SE) practitioners typically do not have the time, access or expertise to review and benefit from such publications. As a result, practitioners are more likely to turn to other sources of information that they trust, e.g., trade magazines, online blog-posts, survey results or technical reports, collectively referred to as Grey Literature (GL). Furthermore, practitioners also share their ideas and experiences as GL, which can serve as a valuable data source for research. While GL itself is not a new topic in SE, using, benefitting and synthesizing knowledge from the GL in SE is a contemporary topic in empirical SE research and we are seeing that researchers are increasingly benefitting from the knowledge available within GL. The goal of this chapter is to provide an overview to GL in SE, together with insights on how SE researchers can effectively use and benefit from the knowledge and evidence available in the vast amount of GL.</data>
    </node>
    <node id="P107660">
      <data key="title">investigating collaboration within online communities software development vs artistic creation</data>
      <data key="abstract">Online creative communities have been able to develop large, open source software (OSS) projects like Linux and Firefox throughout the successful collaborations carried out over the Internet. These communities have also expanded to creative arts domains such as animation, video games, and music. Despite their growing popularity, the factors that lead to successful collaborations in these communities are not entirely understood. In the following, I describe my Ph.D. research project aimed at improving communication, collaboration, and retention in creative arts communities, starting from the experience gained from the literature about OSS communities.</data>
    </node>
    <node id="P125473">
      <data key="title">an empirical study on the characteristics of question answering process on developer forums</data>
      <data key="abstract">Developer forums are one of the most popular and useful Q&amp;A websites on API usages. The analysis of API forums can be a critical resource for the automated question and answer approaches. In this paper, we empirically study three API forums including Twitter, eBay, and AdWords, to investigate the characteristics of question-answering process. We observe that +60% of the posts on all three forums were answered by providing API method names or documentation. +85% of the questions were answered by API development teams and the answers from API development teams drew fewer follow-up questions. Our results provide empirical evidences for us in a future work to build automated solutions to answer developer questions on API forums.</data>
    </node>
    <node id="P158505">
      <data key="title">how to ask for a favor a case study on the success of altruistic requests</data>
      <data key="abstract">Requests are at the core of many social media systems such as question &amp; answer sites and online philanthropy communities. While the success of such requests is critical to the success of the community, the factors that lead community members to satisfy a request are largely unknown. Success of a request depends on factors like who is asking, how they are asking, when are they asking, and most critically what is being requested, ranging from small favors to substantial monetary donations. We present a case study of altruistic requests in an online community where all requests ask for the very same contribution and do not offer anything tangible in return, allowing us to disentangle what is requested from textual and social factors. Drawing from social psychology literature, we extract high-level social features from text that operationalize social relations between recipient and donor and demonstrate that these extracted relations are predictive of success. More specifically, we find that clearly communicating need through the narrative is essential and that that linguistic indications of gratitude, evidentiality, and generalized reciprocity, as well as high status of the asker further increase the likelihood of success. Building on this understanding, we develop a model that can predict the success of unseen requests, significantly improving over several baselines. We link these findings to research in psychology on helping behavior, providing a basis for further analysis of success in social media systems.</data>
    </node>
    <node id="P137685">
      <data key="title">recommending insightful comments for source code using crowdsourced knowledge</data>
      <data key="abstract">Recently, automatic code comment generation is proposed to facilitate program comprehension. Existing code comment generation techniques focus on describing the functionality of the source code. However, there are other aspects such as insights about quality or issues of the code, which are overlooked by earlier approaches. In this paper, we describe a mining approach that recommends insightful comments about the quality, deficiencies or scopes for further improvement of the source code. First, we conduct an exploratory study that motivates crowdsourced knowledge from Stack Overflow discussions as a potential resource for source code comment recommendation. Second, based on the findings from the exploratory study, we propose a heuristic-based technique for mining insightful comments from Stack Overflow Q &amp; A site for source code comment recommendation. Experiments with 292 Stack Overflow code segments and 5,039 discussion comments show that our approach has a promising recall of 85.42%. We also conducted a complementary user study which confirms the accuracy and usefulness of the recommended comments.</data>
    </node>
    <node id="P41026">
      <data key="title">semeval 2016 task 4 sentiment analysis in twitter</data>
      <data key="abstract">This paper discusses the fourth year of the ``Sentiment Analysis in Twitter Task''. SemEval-2016 Task 4 comprises five subtasks, three of which represent a significant departure from previous editions. The first two subtasks are reruns from prior years and ask to predict the overall sentiment, and the sentiment towards a topic in a tweet. The three new subtasks focus on two variants of the basic ``sentiment classification in Twitter'' task. The first variant adopts a five-point scale, which confers an ordinal character to the classification task. The second variant focuses on the correct estimation of the prevalence of each class of interest, a task which has been called quantification in the supervised learning literature. The task continues to be very popular, attracting a total of 43 teams.</data>
    </node>
    <node id="P36188">
      <data key="title">emotxt a toolkit for emotion recognition from text</data>
      <data key="abstract">We present EmoTxt, a toolkit for emotion recognition from text, trained and tested on a gold standard of about 9K question, answers, and comments from online interactions. We provide empirical evidence of the performance of EmoTxt. To the best of our knowledge, EmoTxt is the first open-source toolkit supporting both emotion recognition from text and training of custom emotion classification models.</data>
    </node>
    <node id="P24697">
      <data key="title">the remixing dilemma the trade off between generativity and originality</data>
      <data key="abstract">In this paper we argue that there is a trade-off between generativity and originality in online communities that support open collaboration. We build on foundational theoretical work in peer production to formulate and test a series of hypotheses suggesting that the generativity of creative works is associated with moderate complexity, prominent authors, and cumulativeness. We also formulate and test three hypotheses that these qualities are associated with decreased originality in resulting derivatives. Our analysis uses a rich data set from the Scratch Online Community --a large web-site where young people openly share and remix animations and video games. We discuss the implications of this trade-off for the design of peer production systems that support amateur creativity.</data>
    </node>
    <node id="P385">
      <data key="title">mining communication data in a music community a preliminary analysis</data>
      <data key="abstract">Comments play an important role within online creative communities because they make it possible to foster the production and improvement of authors’ artifacts. We investigate how comment-based communication help shape members’ behavior within online creative communities. In this paper, we report the results of a preliminary study aimed at mining the communication network of a music community for collaborative songwriting, where users collaborate online by first uploading new songs and then by adding new tracks and providing feedback in forms of comments.</data>
    </node>
    <node id="P25741">
      <data key="title">an empirical assessment of best answer prediction models in technical q a sites</data>
      <data key="abstract">Technical Q&amp;A sites have become essential for software engineers as they constantly seek help from other experts to solve their work problems. Despite their success, many questions remain unresolved, sometimes because the asker does not acknowledge any helpful answer. In these cases, an information seeker can only browse all the answers within a question thread to assess their quality as potential solutions. We approach this time-consuming problem as a binary-classification task where a best-answer prediction model is built to identify the accepted answer among those within a resolved question thread, and the candidate solutions to those questions that have received answers but are still unresolved. In this paper, we report on a study aimed at assessing 26 best-answer prediction models in two steps. First, we study how models perform when predicting best answers in Stack Overflow, the most popular Q&amp;A site for software engineers. Then, we assess performance in a cross-platform setting where the prediction models are trained on Stack Overflow and tested on other technical Q&amp;A sites. Our findings show that the choice of the classifier and automatied parameter tuning have a large impact on the prediction of the best answer. We also demonstrate that our approach to the best-answer prediction problem is generalizable across technical Q&amp;A sites. Finally, we provide practical recommendations to Q&amp;A platform designers to curate and preserve the crowdsourced knowledge shared through these sites.</data>
    </node>
    <node id="P57597">
      <data key="title">on developers personality in large scale distributed projects the case of the apache ecosystem</data>
      <data key="abstract">Large-scale distributed projects are typically the results of collective efforts performed by multiple developers, each one having a different personality. The study of developers' personalities has the potential of explaining their' behavior in various contexts. For example, the propensity to trust others, a critical factor to the success of global software engineering - has been found to influence positively the result of code reviews in distributed projects.   In this paper, we perform a quantitative analysis of developers' personality in open source software projects, intended as an extreme form of distributed projects in which no single organization controls the project. We mine ecosystem-level data from the code commits and email messages contributed by the developers working on the Apache Software Foundation (ASF) projects, as representative of large scale-distributed projects.   We find that developers become over time more conscientious, agreeable, and neurotic. Moreover, personality traits do not vary with their role, membership, and extent of contribution to the projects. We also find evidence that more open and more agreeable developers are more likely to become project contributors.1</data>
    </node>
    <node id="P99717">
      <data key="title">how to ask for technical help evidence based guidelines for writing questions on stack overflow</data>
      <data key="abstract">Abstract   Context  The success of Stack Overflow and other community-based question-and-answer (Q&amp;A) sites depends mainly on the will of their members to answer others’ questions. In fact, when formulating requests on Q&amp;A sites, we are not simply seeking for information. Instead, we are also asking for other people's help and feedback. Understanding the dynamics of the participation in Q&amp;A communities is essential to improve the value of crowdsourced knowledge.    Objective  In this paper, we investigate how information seekers can increase the chance of eliciting a successful answer to their questions on Stack Overflow by focusing on the following actionable factors: affect, presentation quality, and time.    Method  We develop a conceptual framework of factors potentially influencing the success of questions in Stack Overflow. We quantitatively analyze a set of over 87 K questions from the official Stack Overflow dump to assess the impact of actionable factors on the success of technical requests. The information seeker reputation is included as a control factor. Furthermore, to understand the role played by affective states in the success of questions, we qualitatively analyze questions containing positive and negative emotions. Finally, a survey is conducted to understand how Stack Overflow users perceive the guideline suggestions for writing questions.    Results  We found that regardless of user reputation, successful questions are short, contain code snippets, and do not abuse with uppercase characters. As regards affect, successful questions adopt a neutral emotional style.    Conclusion  We provide evidence-based guidelines for writing effective questions on Stack Overflow that software engineers can follow to increase the chance of getting technical help. As for the role of affect, we empirically confirmed community guidelines that suggest avoiding rudeness in question writing.</data>
    </node>
    <node id="P5703">
      <data key="title">a benchmark study on sentiment analysis for software engineering research</data>
      <data key="abstract">A recent research trend has emerged to identify developers' emotions, by applying sentiment analysis to the content of communication traces left in collaborative development environments. Trying to overcome the limitations posed by using off-the-shelf sentiment analysis tools, researchers recently started to develop their own tools for the software engineering domain. In this paper, we report a benchmark study to assess the performance and reliability of three sentiment analysis tools specifically customized for software engineering. Furthermore, we offer a reflection on the open challenges, as they emerge from a qualitative analysis of misclassified texts.1</data>
    </node>
    <node id="P150143">
      <data key="title">a gold standard for emotion annotation in stack overflow</data>
      <data key="abstract">Software developers experience and share a wide range of emotions throughout a rich ecosystem of communication channels. A recent trend that has emerged in empirical software engineering studies is leveraging sentiment analysis of developers' communication traces. We release a dataset of 4,800 questions, answers, and comments from Stack Overflow, manually annotated for emotions. Our dataset contributes to the building of a shared corpus of annotated resources to support research on emotion awareness in software development.</data>
    </node>
    <node id="P166340">
      <data key="title">contextual documentation referencing on stack overflow</data>
      <data key="abstract">Software engineering is knowledge-intensive and requires software developers to continually search for knowledge, often on community question answering platforms such as Stack Overflow. Such information sharing platforms do not exist in isolation, and part of the evidence that they exist in a broader software documentation ecosystem is the common presence of hyperlinks to other documentation resources found in forum posts. With the goal of helping to improve the efficiency of information flow on Stack Overflow, we conducted a study to answer the question of how and why documentation is referenced in Stack Overflow threads. We sampled and classified 759 links from two different domains, regular expressions and Android development, to qualitatively and quantitatively analyze the links' context and purpose. We found that links on Stack Overflow serve a wide range of distinct purposes. This observation has major corollaries, including our observation that links to documentation resources are a reflection of the information needs typical to a technology domain. We contribute a framework and method to and analyze the context and purpose of Stack Overflow links, a public dataset of annotated links, and a description of five major observations about linking practices on Stack Overflow, with detailed links to evidence, implications, and a conceptual framework to capture the relations between the five observations.</data>
    </node>
    <node id="P10730">
      <data key="title">bootstrapping a lexicon for emotional arousal in software engineering</data>
      <data key="abstract">Emotional arousal increases activation and performance but may also lead to burnout in software development. We present the first version of a Software Engineering Arousal lexicon (SEA) that is specifically designed to address the problem of emotional arousal in the software developer ecosystem. SEA is built using a bootstrapping approach that combines word embedding model trained on issue-tracking data and manual scoring of items in the lexicon. We show that our lexicon is able to differentiate between issue priorities, which are a source of emotional activation and then act as a proxy for arousal. The best performance is obtained by combining SEA (428 words) with a previously created general purpose lexicon by Warriner et al. (13,915 words) and it achieves Cohen's d effect sizes up to 0.5.</data>
    </node>
    <edge source="P55920" target="P99717">
      <data key="relation">reference</data>
    </edge>
    <edge source="P83951" target="P385">
      <data key="relation">reference</data>
    </edge>
    <edge source="P83951" target="P99717">
      <data key="relation">reference</data>
    </edge>
    <edge source="P83951" target="P24697">
      <data key="relation">reference</data>
    </edge>
    <edge source="P6159" target="P99717">
      <data key="relation">reference</data>
    </edge>
    <edge source="P38538" target="P24697">
      <data key="relation">reference</data>
    </edge>
    <edge source="P124227" target="P99717">
      <data key="relation">reference</data>
    </edge>
    <edge source="P107660" target="P385">
      <data key="relation">reference</data>
    </edge>
    <edge source="P125473" target="P99717">
      <data key="relation">reference</data>
    </edge>
    <edge source="P125473" target="P25741">
      <data key="relation">reference</data>
    </edge>
    <edge source="P158505" target="P99717">
      <data key="relation">reference</data>
    </edge>
    <edge source="P137685" target="P99717">
      <data key="relation">reference</data>
    </edge>
    <edge source="P137685" target="P5703">
      <data key="relation">reference</data>
    </edge>
    <edge source="P41026" target="P99717">
      <data key="relation">reference</data>
    </edge>
    <edge source="P36188" target="P99717">
      <data key="relation">reference</data>
    </edge>
    <edge source="P36188" target="P150143">
      <data key="relation">reference</data>
    </edge>
    <edge source="P36188" target="P5703">
      <data key="relation">reference</data>
    </edge>
    <edge source="P25741" target="P99717">
      <data key="relation">reference</data>
    </edge>
    <edge source="P57597" target="P99717">
      <data key="relation">reference</data>
    </edge>
    <edge source="P99717" target="P10730">
      <data key="relation">reference</data>
    </edge>
    <edge source="P99717" target="P150143">
      <data key="relation">reference</data>
    </edge>
    <edge source="P99717" target="P5703">
      <data key="relation">reference</data>
    </edge>
    <edge source="P99717" target="P166340">
      <data key="relation">reference</data>
    </edge>
    <edge source="P5703" target="P10730">
      <data key="relation">reference</data>
    </edge>
    <edge source="P150143" target="P10730">
      <data key="relation">reference</data>
    </edge>
  </graph>
</graphml>
